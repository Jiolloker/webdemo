pipeline {
  environment {
    registry = "fcambres/webdemo"
    registryCredential = 'dockerhub_id'
    dockerImage = ''
  }
  
  agent any
  
  stages {

    //Empieza Test
    stage('Test') {
      steps {
         script {
          dir('cicd/app-devops-bootcamp/api-store') {
            sh 'npm install'
            sh 'npm run test'
          }
        }
      }
    }
       
    //Finaliza test
    
    //Inicia Stage Build
    stage('build Image') {
      steps {
        echo 'Haciendo el Build de la app'
        script {
          dir('cicd/app-devops-bootcamp/api-store') {
            docker.build registry + ":v1.$BUILD_NUMBER"
          }
        } 
      }
    }
    //Finaliza Stage Build
    
    //Inicia Stage Push
    stage('Push Image') {
      steps {
        echo 'Haciendo un Push a la registry de docker'
        script {
          docker.withRegistry('https://registry.hub.docker.com/', 'dockerhub_id') {
          docker.image("fcambres/webdemo:v1.$BUILD_NUMBER").push()
          }
        }
      }
    }
    //Finaliza Stage Push
        stage('Update Deployment') {
            steps {
                script {
                    // Clone GitHub repo
                    git branch: 'master', url: 'https://github.com/Jiolloker/manifest-eks'  
                    // Cambia el nombre del repo
                    // Update Deployment
                    sh 'chmod u+w prod/app/deployment.yml'
                    def deploymentFile = 'prod/app/deployment.yml'
                    def deploymentContent = readFile(deploymentFile)
                    def updatedDeploymentContent = deploymentContent.replaceAll('fcambres/webdemo:v1.*', "fcambres/webdemo:v1.${"$BUILD_NUMBER"}")
                    writeFile file: deploymentFile, text: updatedDeploymentContent
                    sh 'cat prod/app/deployment.yml'

                    // Push changes to GitHub
                    withCredentials([gitUsernamePassword(credentialsId: 'github_id', gitToolName: 'git-tool')]){
                        sh 'git config --global user.email "jiolloker@example.com"'
                        sh 'git config --global user.name "jiolloker"'
                        sh 'git status'
                        sh 'git add -v prod/app/deployment.yml'
                        sh 'git commit -v -m "Update deployment"'
                        sh 'git push origin master'
                    }
                }
            }
        }
  }
        post {
          always {
        //limpia imagenes
              echo 'Se limpian las imagenes pusheadas'
              sh "docker rmi $registry:v1.$BUILD_NUMBER"
              sh "docker rmi registry.hub.docker.com/$registry:v1.$BUILD_NUMBER"
              
          }
        }

}

